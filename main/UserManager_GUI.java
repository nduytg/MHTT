/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import DCrypto.*;
import Users.*;
import Users.GUI.CreateAccount_GUI;
import Users.GUI.Delete_GUI;
import Users.GUI.ModifyAccount_GUI;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.security.KeyPair;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.text.SimpleDateFormat;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

/**
 *
 * @author Quang Dai
 */
public class UserManager_GUI extends javax.swing.JFrame {

    /**
     * Creates new form UserManage_GUI
     */
    PrivateKey mainPrivateKey = null;
    PublicKey mainPublicKey = null;
    public UserManager_GUI() throws IOException, ParserConfigurationException, SAXException {
        initComponents();
        GetData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        EditUserButton = new javax.swing.JButton();
        DeleteUserButton = new javax.swing.JButton();
        popUpMenu = new javax.swing.JPopupMenu();
        EncryptWithPublicKey = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        EditContact = new javax.swing.JMenuItem();
        DeleteContact = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        ExportContactInfo = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        ShowContactInfo = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        EncryptTab = new javax.swing.JPanel();
        KeyInfoPane = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        CommandLine_Sym = new javax.swing.JTextArea();
        KeySizeBox_Sym = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        AlgorithmField = new javax.swing.JTextField();
        KeyOwnerField = new javax.swing.JTextField();
        KeySizeField = new javax.swing.JTextField();
        ExportPublicKey = new javax.swing.JButton();
        FileInfoPane = new javax.swing.JPanel();
        OutputFileField_Sym = new javax.swing.JTextField();
        InputFileField_Sym = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        BrowseInputFile = new javax.swing.JButton();
        BrowseOutputFile = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        DecryptTab = new javax.swing.JPanel();
        KeyInfoPane1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        CommandLine_Sym1 = new javax.swing.JTextArea();
        KeySizeBox_Sym1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        AlgorithmField1 = new javax.swing.JTextField();
        KeyOwnerField1 = new javax.swing.JTextField();
        KeySizeField1 = new javax.swing.JTextField();
        ExportPublicKey1 = new javax.swing.JButton();
        FileInfoPane1 = new javax.swing.JPanel();
        OutputFileField_Sym1 = new javax.swing.JTextField();
        InputFileField_Sym1 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        BrowseInputFile1 = new javax.swing.JButton();
        BrowseOutputFile1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox<>();
        jComboBox7 = new javax.swing.JComboBox<>();
        jLabel25 = new javax.swing.JLabel();
        jComboBox8 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        TabbedPane = new javax.swing.JTabbedPane();
        AccountPane = new javax.swing.JPanel();
        AccountInfo = new javax.swing.JPanel();
        HoTenLabel = new javax.swing.JLabel();
        EmailLabel = new javax.swing.JLabel();
        AddrLabel = new javax.swing.JLabel();
        PhoneLabel = new javax.swing.JLabel();
        DoBLabel = new javax.swing.JLabel();
        LoginButton = new javax.swing.JButton();
        ExportInfoButton = new javax.swing.JButton();
        UpdateAccButton = new javax.swing.JButton();
        NameField = new javax.swing.JTextField();
        EmailTextField = new javax.swing.JTextField();
        PhoneTextField = new javax.swing.JTextField();
        AddrTextField = new javax.swing.JTextField();
        PasswordLabel = new javax.swing.JLabel();
        PasswordField = new javax.swing.JPasswordField();
        DoBTextField = new javax.swing.JFormattedTextField();
        CreateAccountButton = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        KeyPairInfo = new javax.swing.JPanel();
        PublicKeyScrollPane = new javax.swing.JScrollPane();
        PublicKeyArea = new javax.swing.JTextArea();
        PrivateKeyScrollPane = new javax.swing.JScrollPane();
        PrivateKeyArea = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        KeySizeComboBox1 = new javax.swing.JComboBox<>();
        CreateKeyPairButton1 = new javax.swing.JButton();
        ExportPrivate1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        ContactsPane = new javax.swing.JPanel();
        ScrollUserPane = new javax.swing.JScrollPane();
        UserTable = new javax.swing.JTable();
        UserOperationPane = new javax.swing.JPanel();
        AddUserButton = new javax.swing.JButton();
        GetPublicKeyButton = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        RefreshButton = new javax.swing.JButton();
        AsymmetricTab = new javax.swing.JPanel();
        OutputFileField = new javax.swing.JTextField();
        VerifyButton = new javax.swing.JButton();
        ExportPublic = new javax.swing.JButton();
        EncryptButton = new javax.swing.JButton();
        DecryptButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        KeySizeBox = new javax.swing.JTextField();
        ExportPrivate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        ImportPublicKey = new javax.swing.JButton();
        InputFileField = new javax.swing.JTextField();
        ImportPrivateKey = new javax.swing.JButton();
        FileButton_1 = new javax.swing.JButton();
        CreateKeyPairButton = new javax.swing.JButton();
        FileButton_2 = new javax.swing.JButton();
        SignButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        CommandLine = new javax.swing.JTextArea();
        MenuBar = new javax.swing.JMenuBar();
        Help = new javax.swing.JMenu();
        About = new javax.swing.JMenu();

        EditUserButton.setText("Modify");
        EditUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditUserButtonActionPerformed(evt);
            }
        });

        DeleteUserButton.setText("Delete");
        DeleteUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteUserButtonActionPerformed(evt);
            }
        });

        EncryptWithPublicKey.setText("Encrypt with public key");
        EncryptWithPublicKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EncryptWithPublicKeyActionPerformed(evt);
            }
        });
        popUpMenu.add(EncryptWithPublicKey);
        popUpMenu.add(jSeparator3);

        EditContact.setText("Edit contact");
        EditContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditContactActionPerformed(evt);
            }
        });
        popUpMenu.add(EditContact);
        EditContact.getAccessibleContext().setAccessibleName("popEditUser");

        DeleteContact.setText("Delete contact");
        popUpMenu.add(DeleteContact);
        DeleteContact.getAccessibleContext().setAccessibleName("pop");

        popUpMenu.add(jSeparator2);

        ExportContactInfo.setText("Export contact");
        ExportContactInfo.setActionCommand("");
        popUpMenu.add(ExportContactInfo);
        popUpMenu.add(jSeparator5);

        ShowContactInfo.setText("Show contact info");
        popUpMenu.add(ShowContactInfo);

        KeyInfoPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Public key info"));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        CommandLine_Sym.setEditable(false);
        CommandLine_Sym.setColumns(20);
        CommandLine_Sym.setForeground(new java.awt.Color(0, 255, 0));
        CommandLine_Sym.setLineWrap(true);
        CommandLine_Sym.setRows(5);
        CommandLine_Sym.setWrapStyleWord(true);
        CommandLine_Sym.setAutoscrolls(false);
        CommandLine_Sym.setCaretColor(new java.awt.Color(255, 255, 255));
        CommandLine_Sym.setDoubleBuffered(true);
        jScrollPane2.setViewportView(CommandLine_Sym);

        KeySizeBox_Sym.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        KeySizeBox_Sym.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KeySizeBox_SymActionPerformed(evt);
            }
        });

        jLabel3.setText("Algorithm:");

        jLabel9.setText("Key owner:");

        jLabel12.setText("Key size:");

        AlgorithmField.setEditable(false);
        AlgorithmField.setText("RSA");

        KeyOwnerField.setEditable(false);
        KeyOwnerField.setText("<email@abc.com>");

        KeySizeField.setEditable(false);

        ExportPublicKey.setText("Export Public Key");
        ExportPublicKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportPublicKeyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout KeyInfoPaneLayout = new javax.swing.GroupLayout(KeyInfoPane);
        KeyInfoPane.setLayout(KeyInfoPaneLayout);
        KeyInfoPaneLayout.setHorizontalGroup(
            KeyInfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KeyInfoPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(KeyInfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(KeyInfoPaneLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(AlgorithmField))
                    .addGroup(KeyInfoPaneLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(12, 12, 12)
                        .addComponent(KeyOwnerField, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                    .addGroup(KeyInfoPaneLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(24, 24, 24)
                        .addComponent(KeySizeField, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                    .addGroup(KeyInfoPaneLayout.createSequentialGroup()
                        .addComponent(ExportPublicKey)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(KeyInfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(KeyInfoPaneLayout.createSequentialGroup()
                    .addGap(165, 165, 165)
                    .addComponent(KeySizeBox_Sym, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(262, Short.MAX_VALUE)))
        );
        KeyInfoPaneLayout.setVerticalGroup(
            KeyInfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KeyInfoPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(KeyInfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(KeyInfoPaneLayout.createSequentialGroup()
                        .addGroup(KeyInfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(AlgorithmField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(KeyInfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(KeyOwnerField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(KeyInfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(KeySizeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(ExportPublicKey)
                        .addGap(0, 74, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
            .addGroup(KeyInfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(KeyInfoPaneLayout.createSequentialGroup()
                    .addGap(72, 72, 72)
                    .addComponent(KeySizeBox_Sym, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(127, Short.MAX_VALUE)))
        );

        FileInfoPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Encryptor"));

        OutputFileField_Sym.setEditable(false);
        OutputFileField_Sym.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        OutputFileField_Sym.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OutputFileField_SymActionPerformed(evt);
            }
        });

        InputFileField_Sym.setEditable(false);
        InputFileField_Sym.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        InputFileField_Sym.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputFileField_SymActionPerformed(evt);
            }
        });

        jLabel5.setText("Input File");

        jLabel6.setText("Output File");

        BrowseInputFile.setText("...");
        BrowseInputFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrowseInputFileActionPerformed(evt);
            }
        });

        BrowseOutputFile.setText("...");
        BrowseOutputFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrowseOutputFileActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Session key"));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel13.setText("Symmetric Algorithm:");

        jLabel14.setText("Session key's size:");

        jLabel15.setText("Padding scheme:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel16.setText("Mode of Operation:");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel15)
                    .addComponent(jLabel14)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jButton1.setText("Encrypt");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FileInfoPaneLayout = new javax.swing.GroupLayout(FileInfoPane);
        FileInfoPane.setLayout(FileInfoPaneLayout);
        FileInfoPaneLayout.setHorizontalGroup(
            FileInfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FileInfoPaneLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(FileInfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(FileInfoPaneLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(FileInfoPaneLayout.createSequentialGroup()
                        .addGroup(FileInfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(FileInfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(InputFileField_Sym)
                            .addComponent(OutputFileField_Sym, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(FileInfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BrowseInputFile, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BrowseOutputFile, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(15, 15, 15))
        );
        FileInfoPaneLayout.setVerticalGroup(
            FileInfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FileInfoPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FileInfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FileInfoPaneLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(InputFileField_Sym, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(FileInfoPaneLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(OutputFileField_Sym, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FileInfoPaneLayout.createSequentialGroup()
                        .addComponent(BrowseInputFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BrowseOutputFile)))
                .addGroup(FileInfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FileInfoPaneLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FileInfoPaneLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))))
        );

        javax.swing.GroupLayout EncryptTabLayout = new javax.swing.GroupLayout(EncryptTab);
        EncryptTab.setLayout(EncryptTabLayout);
        EncryptTabLayout.setHorizontalGroup(
            EncryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EncryptTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EncryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(KeyInfoPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(FileInfoPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        EncryptTabLayout.setVerticalGroup(
            EncryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EncryptTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(KeyInfoPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(FileInfoPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab1", EncryptTab);

        KeyInfoPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Private key info"));

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        CommandLine_Sym1.setEditable(false);
        CommandLine_Sym1.setColumns(20);
        CommandLine_Sym1.setForeground(new java.awt.Color(0, 255, 0));
        CommandLine_Sym1.setLineWrap(true);
        CommandLine_Sym1.setRows(5);
        CommandLine_Sym1.setWrapStyleWord(true);
        CommandLine_Sym1.setAutoscrolls(false);
        CommandLine_Sym1.setCaretColor(new java.awt.Color(255, 255, 255));
        CommandLine_Sym1.setDoubleBuffered(true);
        jScrollPane3.setViewportView(CommandLine_Sym1);

        KeySizeBox_Sym1.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        KeySizeBox_Sym1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KeySizeBox_Sym1ActionPerformed(evt);
            }
        });

        jLabel17.setText("Algorithm:");

        jLabel18.setText("Key owner:");

        jLabel19.setText("Key size:");

        AlgorithmField1.setEditable(false);
        AlgorithmField1.setText("RSA");

        KeyOwnerField1.setEditable(false);
        KeyOwnerField1.setText("<email@abc.com>");

        KeySizeField1.setEditable(false);

        ExportPublicKey1.setText("Export Public Key");
        ExportPublicKey1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportPublicKey1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout KeyInfoPane1Layout = new javax.swing.GroupLayout(KeyInfoPane1);
        KeyInfoPane1.setLayout(KeyInfoPane1Layout);
        KeyInfoPane1Layout.setHorizontalGroup(
            KeyInfoPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KeyInfoPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(KeyInfoPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(KeyInfoPane1Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(18, 18, 18)
                        .addComponent(AlgorithmField1))
                    .addGroup(KeyInfoPane1Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(12, 12, 12)
                        .addComponent(KeyOwnerField1, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                    .addGroup(KeyInfoPane1Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(24, 24, 24)
                        .addComponent(KeySizeField1, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                    .addGroup(KeyInfoPane1Layout.createSequentialGroup()
                        .addComponent(ExportPublicKey1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(KeyInfoPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(KeyInfoPane1Layout.createSequentialGroup()
                    .addGap(165, 165, 165)
                    .addComponent(KeySizeBox_Sym1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(262, Short.MAX_VALUE)))
        );
        KeyInfoPane1Layout.setVerticalGroup(
            KeyInfoPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KeyInfoPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(KeyInfoPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(KeyInfoPane1Layout.createSequentialGroup()
                        .addGroup(KeyInfoPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(AlgorithmField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(KeyInfoPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(KeyOwnerField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(KeyInfoPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(KeySizeField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(ExportPublicKey1)
                        .addGap(0, 74, Short.MAX_VALUE))
                    .addComponent(jScrollPane3))
                .addContainerGap())
            .addGroup(KeyInfoPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(KeyInfoPane1Layout.createSequentialGroup()
                    .addGap(72, 72, 72)
                    .addComponent(KeySizeBox_Sym1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(127, Short.MAX_VALUE)))
        );

        FileInfoPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Decryptor"));

        OutputFileField_Sym1.setEditable(false);
        OutputFileField_Sym1.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        OutputFileField_Sym1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OutputFileField_Sym1ActionPerformed(evt);
            }
        });

        InputFileField_Sym1.setEditable(false);
        InputFileField_Sym1.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        InputFileField_Sym1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputFileField_Sym1ActionPerformed(evt);
            }
        });

        jLabel20.setText("Input File");

        jLabel21.setText("Output File");

        BrowseInputFile1.setText("...");
        BrowseInputFile1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrowseInputFile1ActionPerformed(evt);
            }
        });

        BrowseOutputFile1.setText("...");
        BrowseOutputFile1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrowseOutputFile1ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Session key"));

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox5.setEnabled(false);

        jLabel22.setText("Symmetric Algorithm:");

        jLabel23.setText("Session key's size:");

        jLabel24.setText("Padding scheme:");

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox6.setEnabled(false);

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox7.setEnabled(false);

        jLabel25.setText("Mode of Operation:");

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox8.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(jLabel24)
                    .addComponent(jLabel23)
                    .addComponent(jLabel25))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jButton2.setText("Decrypt");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FileInfoPane1Layout = new javax.swing.GroupLayout(FileInfoPane1);
        FileInfoPane1.setLayout(FileInfoPane1Layout);
        FileInfoPane1Layout.setHorizontalGroup(
            FileInfoPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FileInfoPane1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(FileInfoPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(FileInfoPane1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addGroup(FileInfoPane1Layout.createSequentialGroup()
                        .addGroup(FileInfoPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(FileInfoPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(InputFileField_Sym1)
                            .addComponent(OutputFileField_Sym1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(FileInfoPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BrowseInputFile1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BrowseOutputFile1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(15, 15, 15))
        );
        FileInfoPane1Layout.setVerticalGroup(
            FileInfoPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FileInfoPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FileInfoPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FileInfoPane1Layout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(InputFileField_Sym1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(FileInfoPane1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(OutputFileField_Sym1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FileInfoPane1Layout.createSequentialGroup()
                        .addComponent(BrowseInputFile1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BrowseOutputFile1)))
                .addGroup(FileInfoPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FileInfoPane1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FileInfoPane1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))))
        );

        javax.swing.GroupLayout DecryptTabLayout = new javax.swing.GroupLayout(DecryptTab);
        DecryptTab.setLayout(DecryptTabLayout);
        DecryptTabLayout.setHorizontalGroup(
            DecryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DecryptTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DecryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(KeyInfoPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(FileInfoPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        DecryptTabLayout.setVerticalGroup(
            DecryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DecryptTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(KeyInfoPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(FileInfoPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab1", DecryptTab);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(900, 530));

        TabbedPane.setDoubleBuffered(true);
        TabbedPane.setMaximumSize(new java.awt.Dimension(800, 440));
        TabbedPane.setMinimumSize(new java.awt.Dimension(800, 440));
        TabbedPane.setPreferredSize(new java.awt.Dimension(900, 500));

        AccountInfo.setBorder(javax.swing.BorderFactory.createTitledBorder("Your Infomation"));

        HoTenLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        HoTenLabel.setText("Họ Tên:");

        EmailLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EmailLabel.setText("Email:");

        AddrLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AddrLabel.setText("Địa chỉ:");

        PhoneLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        PhoneLabel.setText("SDT:");

        DoBLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        DoBLabel.setText("DoB");

        LoginButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        LoginButton.setText("Login");
        LoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButtonActionPerformed(evt);
            }
        });

        ExportInfoButton.setText("Export account info");

        UpdateAccButton.setText("Update account info");

        NameField.setEditable(false);
        NameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameFieldActionPerformed(evt);
            }
        });

        EmailTextField.setEditable(false);

        PhoneTextField.setEditable(false);

        AddrTextField.setEditable(false);

        PasswordLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        PasswordLabel.setText("Password:");

        PasswordField.setEditable(false);
        PasswordField.setText("jPasswordField1");

        DoBTextField.setEditable(false);

        CreateAccountButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        CreateAccountButton.setText("Create Account");
        CreateAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateAccountButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AccountInfoLayout = new javax.swing.GroupLayout(AccountInfo);
        AccountInfo.setLayout(AccountInfoLayout);
        AccountInfoLayout.setHorizontalGroup(
            AccountInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AccountInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AccountInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AccountInfoLayout.createSequentialGroup()
                        .addGroup(AccountInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EmailLabel)
                            .addComponent(PasswordLabel)
                            .addComponent(HoTenLabel)
                            .addComponent(DoBLabel)
                            .addComponent(PhoneLabel)
                            .addComponent(AddrLabel))
                        .addGap(31, 31, 31)
                        .addGroup(AccountInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(PhoneTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DoBTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PasswordField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EmailTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NameField)
                            .addComponent(AddrTextField))
                        .addContainerGap())
                    .addGroup(AccountInfoLayout.createSequentialGroup()
                        .addComponent(UpdateAccButton)
                        .addGap(18, 18, 18)
                        .addComponent(ExportInfoButton)
                        .addGap(0, 16, Short.MAX_VALUE))
                    .addGroup(AccountInfoLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(AccountInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AccountInfoLayout.createSequentialGroup()
                                .addComponent(CreateAccountButton)
                                .addGap(39, 39, 39)
                                .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jSeparator4)))))
        );
        AccountInfoLayout.setVerticalGroup(
            AccountInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AccountInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AccountInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HoTenLabel)
                    .addComponent(NameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(AccountInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EmailLabel)
                    .addComponent(EmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(AccountInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PasswordLabel)
                    .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(AccountInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DoBLabel)
                    .addComponent(DoBTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(AccountInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PhoneLabel)
                    .addComponent(PhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(AccountInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddrLabel)
                    .addComponent(AddrTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AccountInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CreateAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AccountInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UpdateAccButton)
                    .addComponent(ExportInfoButton))
                .addGap(28, 28, 28))
        );

        KeyPairInfo.setBorder(javax.swing.BorderFactory.createTitledBorder("Your Key Pair"));

        PublicKeyScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        PublicKeyArea.setEditable(false);
        PublicKeyArea.setColumns(20);
        PublicKeyArea.setLineWrap(true);
        PublicKeyArea.setRows(5);
        PublicKeyScrollPane.setViewportView(PublicKeyArea);

        PrivateKeyScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        PrivateKeyArea.setEditable(false);
        PrivateKeyArea.setColumns(20);
        PrivateKeyArea.setLineWrap(true);
        PrivateKeyArea.setRows(5);
        PrivateKeyScrollPane.setViewportView(PrivateKeyArea);

        jSeparator1.setPreferredSize(new java.awt.Dimension(169, 2));

        jLabel7.setText("Your Public Key");

        jLabel8.setText("Your Private Key");

        KeySizeComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "768", "1024", "2048", "3072", "4096", "8192" }));
        KeySizeComboBox1.setAutoscrolls(true);
        KeySizeComboBox1.setDoubleBuffered(true);
        KeySizeComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KeySizeComboBox1ActionPerformed(evt);
            }
        });

        CreateKeyPairButton1.setText("Create RSA Key Pair");
        CreateKeyPairButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateKeyPairButton1ActionPerformed(evt);
            }
        });

        ExportPrivate1.setText("Export Key Pair & User Info");
        ExportPrivate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportPrivate1ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Keysize:");

        javax.swing.GroupLayout KeyPairInfoLayout = new javax.swing.GroupLayout(KeyPairInfo);
        KeyPairInfo.setLayout(KeyPairInfoLayout);
        KeyPairInfoLayout.setHorizontalGroup(
            KeyPairInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, KeyPairInfoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(200, 200, 200))
            .addGroup(KeyPairInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(KeyPairInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(KeyPairInfoLayout.createSequentialGroup()
                        .addGroup(KeyPairInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PublicKeyScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PrivateKeyScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(60, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, KeyPairInfoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(211, 211, 211))
                    .addGroup(KeyPairInfoLayout.createSequentialGroup()
                        .addGroup(KeyPairInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(KeyPairInfoLayout.createSequentialGroup()
                                .addGroup(KeyPairInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CreateKeyPairButton1)
                                    .addGroup(KeyPairInfoLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(KeySizeComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(ExportPrivate1)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        KeyPairInfoLayout.setVerticalGroup(
            KeyPairInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, KeyPairInfoLayout.createSequentialGroup()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PublicKeyScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PrivateKeyScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(KeyPairInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(KeyPairInfoLayout.createSequentialGroup()
                        .addComponent(CreateKeyPairButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(KeyPairInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(KeySizeComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(ExportPrivate1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        jLabel10.setText("Ghi lam nham gi do duoi day cho do don coi");

        javax.swing.GroupLayout AccountPaneLayout = new javax.swing.GroupLayout(AccountPane);
        AccountPane.setLayout(AccountPaneLayout);
        AccountPaneLayout.setHorizontalGroup(
            AccountPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AccountPaneLayout.createSequentialGroup()
                .addGroup(AccountPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AccountPaneLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel10)
                        .addGap(18, 18, Short.MAX_VALUE))
                    .addGroup(AccountPaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(AccountInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(KeyPairInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        AccountPaneLayout.setVerticalGroup(
            AccountPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AccountPaneLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(AccountInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jLabel10)
                .addContainerGap(93, Short.MAX_VALUE))
            .addGroup(AccountPaneLayout.createSequentialGroup()
                .addComponent(KeyPairInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        TabbedPane.addTab("Your Account", AccountPane);

        ContactsPane.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        ScrollUserPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Contacts Info"));

        UserTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Họ tên", "Email", "SĐT", "Public Key", "Địa chỉ", "Ngày sinh"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        UserTable.setPreferredSize(new java.awt.Dimension(200, 200));
        UserTable.setRowHeight(25);
        UserTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                UserTableMousePressed(evt);
            }
        });
        ScrollUserPane.setViewportView(UserTable);
        if (UserTable.getColumnModel().getColumnCount() > 0) {
            UserTable.getColumnModel().getColumn(0).setResizable(false);
            UserTable.getColumnModel().getColumn(1).setResizable(false);
            UserTable.getColumnModel().getColumn(2).setResizable(false);
            UserTable.getColumnModel().getColumn(3).setResizable(false);
            UserTable.getColumnModel().getColumn(4).setResizable(false);
            UserTable.getColumnModel().getColumn(5).setResizable(false);
        }

        UserOperationPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Operation"));

        AddUserButton.setText("Add User");
        AddUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddUserButtonActionPerformed(evt);
            }
        });

        GetPublicKeyButton.setText("Get Public Key");

        jButton9.setText("Import new user");

        javax.swing.GroupLayout UserOperationPaneLayout = new javax.swing.GroupLayout(UserOperationPane);
        UserOperationPane.setLayout(UserOperationPaneLayout);
        UserOperationPaneLayout.setHorizontalGroup(
            UserOperationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserOperationPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UserOperationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AddUserButton, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(GetPublicKeyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        UserOperationPaneLayout.setVerticalGroup(
            UserOperationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserOperationPaneLayout.createSequentialGroup()
                .addGroup(UserOperationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GetPublicKeyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        RefreshButton.setText("Refresh");
        RefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ContactsPaneLayout = new javax.swing.GroupLayout(ContactsPane);
        ContactsPane.setLayout(ContactsPaneLayout);
        ContactsPaneLayout.setHorizontalGroup(
            ContactsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ScrollUserPane, javax.swing.GroupLayout.DEFAULT_SIZE, 871, Short.MAX_VALUE)
            .addGroup(ContactsPaneLayout.createSequentialGroup()
                .addComponent(UserOperationPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(RefreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        ContactsPaneLayout.setVerticalGroup(
            ContactsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ContactsPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollUserPane, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ContactsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UserOperationPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RefreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );

        TabbedPane.addTab("Contacts", ContactsPane);

        OutputFileField.setEditable(false);
        OutputFileField.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        OutputFileField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OutputFileFieldActionPerformed(evt);
            }
        });

        VerifyButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        VerifyButton.setText("Verify");
        VerifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerifyButtonActionPerformed(evt);
            }
        });

        ExportPublic.setText("Export Public Key");
        ExportPublic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportPublicActionPerformed(evt);
            }
        });

        EncryptButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        EncryptButton.setText("Encrypt");
        EncryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EncryptButtonActionPerformed(evt);
            }
        });

        DecryptButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        DecryptButton.setText("Decrypt");
        DecryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecryptButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Input File");

        jLabel4.setText("Output File");

        KeySizeBox.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        KeySizeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KeySizeBoxActionPerformed(evt);
            }
        });

        ExportPrivate.setText("Export Private Key");
        ExportPrivate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportPrivateActionPerformed(evt);
            }
        });

        jLabel1.setText("Điền keysize");

        ImportPublicKey.setText("ImportPublicKey");
        ImportPublicKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportPublicKeyActionPerformed(evt);
            }
        });

        InputFileField.setEditable(false);
        InputFileField.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        InputFileField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputFileFieldActionPerformed(evt);
            }
        });

        ImportPrivateKey.setText("ImportPrivateKey");
        ImportPrivateKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportPrivateKeyActionPerformed(evt);
            }
        });

        FileButton_1.setText("...");
        FileButton_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileButton_1ActionPerformed(evt);
            }
        });

        CreateKeyPairButton.setText("Create RSA Key Pair");
        CreateKeyPairButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateKeyPairButtonActionPerformed(evt);
            }
        });

        FileButton_2.setText("...");
        FileButton_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileButton_2ActionPerformed(evt);
            }
        });

        SignButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        SignButton.setText("Sign");
        SignButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignButtonActionPerformed(evt);
            }
        });

        CommandLine.setEditable(false);
        CommandLine.setBackground(new java.awt.Color(0, 0, 0));
        CommandLine.setColumns(20);
        CommandLine.setForeground(new java.awt.Color(0, 255, 0));
        CommandLine.setLineWrap(true);
        CommandLine.setRows(5);
        CommandLine.setWrapStyleWord(true);
        CommandLine.setAutoscrolls(false);
        jScrollPane1.setViewportView(CommandLine);

        javax.swing.GroupLayout AsymmetricTabLayout = new javax.swing.GroupLayout(AsymmetricTab);
        AsymmetricTab.setLayout(AsymmetricTabLayout);
        AsymmetricTabLayout.setHorizontalGroup(
            AsymmetricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AsymmetricTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AsymmetricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AsymmetricTabLayout.createSequentialGroup()
                        .addGroup(AsymmetricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AsymmetricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(AsymmetricTabLayout.createSequentialGroup()
                                    .addGap(7, 7, 7)
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(KeySizeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(ExportPublic, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(CreateKeyPairButton))
                            .addGroup(AsymmetricTabLayout.createSequentialGroup()
                                .addComponent(ExportPrivate, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)))
                        .addGap(16, 16, 16)
                        .addGroup(AsymmetricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AsymmetricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(InputFileField)
                            .addComponent(OutputFileField, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AsymmetricTabLayout.createSequentialGroup()
                                .addGroup(AsymmetricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ImportPublicKey)
                                    .addComponent(EncryptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SignButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(AsymmetricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DecryptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ImportPrivateKey)
                                    .addComponent(VerifyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AsymmetricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FileButton_1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FileButton_2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(334, Short.MAX_VALUE))
                    .addGroup(AsymmetricTabLayout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(20, 20, 20))))
        );
        AsymmetricTabLayout.setVerticalGroup(
            AsymmetricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AsymmetricTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(AsymmetricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AsymmetricTabLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(AsymmetricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AsymmetricTabLayout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(AsymmetricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(KeySizeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ExportPublic)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ExportPrivate))
                            .addGroup(AsymmetricTabLayout.createSequentialGroup()
                                .addComponent(CreateKeyPairButton)
                                .addGap(50, 50, 50)))
                        .addGap(186, 186, 186))
                    .addGroup(AsymmetricTabLayout.createSequentialGroup()
                        .addGroup(AsymmetricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AsymmetricTabLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(InputFileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(AsymmetricTabLayout.createSequentialGroup()
                                .addComponent(FileButton_1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(AsymmetricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(FileButton_2)
                                    .addComponent(OutputFileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AsymmetricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ImportPrivateKey)
                            .addComponent(ImportPublicKey))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AsymmetricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EncryptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DecryptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(AsymmetricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SignButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(VerifyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        TabbedPane.addTab("Asymmetric Encryption", AsymmetricTab);

        Help.setText("Help");
        MenuBar.add(Help);

        About.setText("About");
        MenuBar.add(About);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 880, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE))
        );

        TabbedPane.getAccessibleContext().setAccessibleName("Users");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddUserButtonActionPerformed
        // TODO add your handling code here: 
            CreateAccount_GUI window = new CreateAccount_GUI();
            window.show();      
    }//GEN-LAST:event_AddUserButtonActionPerformed

    private void DeleteUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteUserButtonActionPerformed
        // TODO add your handling code here:
            Delete_GUI window = new Delete_GUI();
            window.show();
    }//GEN-LAST:event_DeleteUserButtonActionPerformed

    private void EditUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditUserButtonActionPerformed
        // TODO add your handling code here:

            ModifyAccount_GUI window = new ModifyAccount_GUI();
            window.show();
           
    }//GEN-LAST:event_EditUserButtonActionPerformed

    private void RefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButtonActionPerformed
        try {
            // TODO add your handling code here:
            this.GetData();
        } catch (SAXException | IOException | ParserConfigurationException ex) {
            Logger.getLogger(UserManager_GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_RefreshButtonActionPerformed

    private void UserTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserTableMousePressed
        // TODO add your handling code here:
        if (SwingUtilities.isRightMouseButton(evt))
            popUpMenu.show(this, evt.getX(), evt.getY());
    }//GEN-LAST:event_UserTableMousePressed

    private void EditContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditContactActionPerformed
        // TODO add your handling code here:
        ModifyAccount_GUI window = new ModifyAccount_GUI();
        window.setVisible(true);
    }//GEN-LAST:event_EditContactActionPerformed

    private void KeySizeBox_SymActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KeySizeBox_SymActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KeySizeBox_SymActionPerformed

    private void ExportPublicKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportPublicKeyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ExportPublicKeyActionPerformed

    private void OutputFileFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OutputFileFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OutputFileFieldActionPerformed

    private void VerifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerifyButtonActionPerformed
        try
        {
            // TODO add your handling code here:
            if("".equals(InputFileField.getText()))
            {
                CommandLine.append("Invalid input....");
                return;
            }

            //DCrypto.DCrypto.class.
            if(mainPublicKey == null)
            {
                CommandLine.append("\nError: Empty public key!\nPlease import public key!");
                return;
            }
            String originFile = InputFileField.getText();
            String signatureFile = originFile + ".sig";
            OutputFileField.setText(signatureFile);
            File testFile = new File(signatureFile);
            if(testFile.exists())
            {
                CommandLine.append("\nChecked. Signature file exist.");
            }
            else
            {
                CommandLine.append("\nSignature file does not exist.");
                return;
            }

            SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
            long startTime = System.currentTimeMillis();
            CommandLine.append("\n" + sdf.format(startTime) + " - Begin verifying file...");
            boolean result = false;

            String signature = "";
            FileReader fd = null;
            try
            {
                fd = new FileReader(testFile);
            }
            catch (FileNotFoundException ex)
            {
                Logger.getLogger(DCrypto.class.getName()).log(Level.SEVERE, null, ex);
            }
            BufferedReader bf = new BufferedReader(fd);
            signature = bf.readLine();

            result = DCrypto.verifySign(mainPublicKey, originFile, signature);

            long endTime = System.currentTimeMillis();

            if(result == true)
            CommandLine.append("\n" + sdf.format(endTime) +" Signatured verified! ^^");
            else
            CommandLine.append("\n" + sdf.format(endTime) +" Signature doesn't match....");
        }
        catch (IOException ex)
        {
            Logger.getLogger(DCrypto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_VerifyButtonActionPerformed

    private void ExportPublicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportPublicActionPerformed
        // TODO add your handling code here:
        if (evt.getSource() == ExportPublic)
        {
            JFileChooser fc = new JFileChooser();
            if(mainPublicKey == null)
            {
                CommandLine.append("\nPlease create public key first!!!!\n");
                return;
            }
            int returnVal = fc.showSaveDialog(UserManager_GUI.this);

            if (returnVal == JFileChooser.APPROVE_OPTION)
            {
                DCrypto.exportPublicKey(mainPublicKey, fc.getSelectedFile().getPath());
                CommandLine.append("\nExported public key\n");
            }
            else
            {

            }
        }
    }//GEN-LAST:event_ExportPublicActionPerformed

    private void EncryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EncryptButtonActionPerformed

        try {
            if("".equals(InputFileField.getText()) || "".equals(OutputFileField.getText()))
            {
                CommandLine.append("\nInvalid input....");
                return;
            }
            SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
            long startTime = System.currentTimeMillis();
            CommandLine.append("\n" + sdf.format(startTime) + " - Begin encrypting file...");
            boolean result = false;
            result = DCrypto.RSAEncryptFile(mainPublicKey, InputFileField.getText(), OutputFileField.getText());
            long endTime = System.currentTimeMillis();
            if(result == true)
                CommandLine.append("\n" + sdf.format(endTime) + " - Encryption completed. ^^");
            else
                CommandLine.append("\n" + sdf.format(endTime) + " - Encryption failed...");
        } 
        catch (IOException ex) 
        {
            Logger.getLogger(UserManager_GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        

    }//GEN-LAST:event_EncryptButtonActionPerformed

    private void DecryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DecryptButtonActionPerformed
        // TODO add your handling code here:
        if("".equals(InputFileField.getText()) || "".equals(OutputFileField.getText()))
        {
            CommandLine.append("Invalid input....");
            return;
        }
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
        long startTime = System.currentTimeMillis();
        CommandLine.append("\n" + sdf.format(startTime) + " - Begin decrypting file...");
        boolean result = false;
        result = DCrypto.RSADecryptFile(mainPrivateKey, InputFileField.getText(), OutputFileField.getText());
        long endTime = System.currentTimeMillis();
        if(result == true)
        CommandLine.append("\n" + sdf.format(endTime) + " - Decryption completed. ^^");
        else
        CommandLine.append("\n" + sdf.format(endTime) + " - Decryption failed...");
    }//GEN-LAST:event_DecryptButtonActionPerformed

    private void KeySizeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KeySizeBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KeySizeBoxActionPerformed

    private void ExportPrivateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportPrivateActionPerformed
        // TODO add your handling code here:
        if (evt.getSource() == ExportPrivate)
        {
            JFileChooser fc = new JFileChooser();
            if(mainPrivateKey == null)
            {
                CommandLine.append("\nPlease create private key first!!!!\n");
                return;
            }
            int returnVal = fc.showSaveDialog(UserManager_GUI.this);

            if (returnVal == JFileChooser.APPROVE_OPTION)
            {
                DCrypto.exportPrivateKey(mainPrivateKey, fc.getSelectedFile().getPath());
                CommandLine.append("\nExported private key\n");
            }
            else
            {

            }
        }
    }//GEN-LAST:event_ExportPrivateActionPerformed

    private void ImportPublicKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportPublicKeyActionPerformed
        // TODO add your handling code here:
        if (evt.getSource() == ImportPublicKey)
        {
            JFileChooser fc = new JFileChooser();
            int returnVal = fc.showOpenDialog(UserManager_GUI.this);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                mainPublicKey = DCrypto.importPublicKey(file.getPath());
                CommandLine.append("\n=====Imported public key=====");
                CommandLine.append("\n" + DCrypto.keyToString(mainPublicKey));
                CommandLine.append("\n=======End public key========");
            }
            else
            {
                //chua dien
            }
        }
    }//GEN-LAST:event_ImportPublicKeyActionPerformed

    private void InputFileFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputFileFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputFileFieldActionPerformed

    private void ImportPrivateKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportPrivateKeyActionPerformed
        // TODO add your handling code here:
        if (evt.getSource() == ImportPrivateKey)
        {
            JFileChooser fc = new JFileChooser();
            int returnVal = fc.showOpenDialog(UserManager_GUI.this);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                mainPrivateKey = DCrypto.importPrivateKey(file.getPath());
                CommandLine.append("\n=====Imported private key=====");
                CommandLine.append("\n" + DCrypto.keyToString(mainPrivateKey));
                CommandLine.append("\n=======End private key========");
            }
            else
            {

            }
        }
    }//GEN-LAST:event_ImportPrivateKeyActionPerformed

    private void FileButton_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileButton_1ActionPerformed
        // TODO add your handling code here:
        //Handle open button action.
        if (evt.getSource() == FileButton_1)
        {
            JFileChooser fc = new JFileChooser();
            int returnVal = fc.showOpenDialog(UserManager_GUI.this);

            if (returnVal == fc.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                InputFileField.setText(file.getPath());
            }
            else
            {

            }
        }
    }//GEN-LAST:event_FileButton_1ActionPerformed

    private void CreateKeyPairButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateKeyPairButtonActionPerformed
        // TODO add your handling code here:
        if(KeySizeBox.getText().equals(""))
        {
            CommandLine.append("\nError: Empty keysize!!!!\n");
            return;
        }
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
        int keySize = Integer.parseInt(KeySizeBox.getText());

        if(keySize < 768 || keySize > 16384)
        {
            CommandLine.append("\nInvalid key size! Key size must be between 768 and 16384 bits");
            return;
        }
        if(keySize % 8 != 0)
        {
            CommandLine.append("\nKey size must divisible by 8!!!");
            return;
        }

        long startTime = System.currentTimeMillis();
        CommandLine.append("\nGenerating RSA Key Pair at " + sdf.format(startTime));

        KeyPair keyPair = DCrypto.createRSAKeyPair(keySize);
        mainPublicKey = keyPair.getPublic();
        mainPrivateKey = keyPair.getPrivate();

        long endTime = System.currentTimeMillis();
        CommandLine.append("\nFinished at " + sdf.format(endTime));
        CommandLine.append("\n=========Public key==========\n" + DCrypto.keyToString(mainPublicKey) );
        CommandLine.append("\n========End public key=======");
        CommandLine.append("\n\n=========Private key=========\n" + DCrypto.keyToString(mainPrivateKey) );
        CommandLine.append("\n========End private key======");
    }//GEN-LAST:event_CreateKeyPairButtonActionPerformed

    private void FileButton_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileButton_2ActionPerformed
        // TODO add your handling code here:
        //Handle open button action.
        if (evt.getSource() == FileButton_2)
        {
            JFileChooser fc = new JFileChooser();
            int returnVal = fc.showSaveDialog(UserManager_GUI.this);

            if (returnVal == JFileChooser.APPROVE_OPTION) 
            {
                File file = fc.getSelectedFile();
                OutputFileField.setText(file.getPath());
            }
            else
            {

            }
        }
    }//GEN-LAST:event_FileButton_2ActionPerformed

    private void SignButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignButtonActionPerformed
        // TODO add your handling code here:
        try
        {
            String algorithm = "SHA-256";
            if("".equals(InputFileField.getText()))
            {
                CommandLine.append("Invalid input....");
                return;
            }
            if(mainPrivateKey == null)
            {
                CommandLine.append("\nError: Empty private key!\nPlease import private key!");
                return;
            }
            OutputFileField.setText(InputFileField.getText().concat(".sig"));

            SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
            long startTime = System.currentTimeMillis();
            CommandLine.append("\n" + sdf.format(startTime) + " - Begin signing file...");
            boolean result = false;

            String hashString = DCrypto.digestFile(InputFileField.getText(), algorithm);
            CommandLine.append("\nHash String: " + hashString);
            String signature = DCrypto.signMess(mainPrivateKey, hashString);
            CommandLine.append("\nSignature created: " + signature);

            if("".equals(hashString) || "".equals(signature))
            {
                long endTime = System.currentTimeMillis();
                CommandLine.append("\n" + sdf.format(endTime) + " - Signing failed...");
                return;
            }

            File signatureFile = new File(OutputFileField.getText());
            signatureFile.createNewFile();
            PrintWriter writer = new PrintWriter(signatureFile);
            writer.println(signature);
            writer.close();

            CommandLine.append("\nSignature file " + OutputFileField.getText() + " has been created.");
            long endTime = System.currentTimeMillis();
            CommandLine.append("\n" + sdf.format(endTime) + " - Signing completed.");
        }
        catch (IOException ex)
        {
            Logger.getLogger(UserManager_GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SignButtonActionPerformed

    private void EncryptWithPublicKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EncryptWithPublicKeyActionPerformed
        // TODO add your handling code here:
        //Show tab encrypt voi public key len
        //1. Tao session key - Cho phep nguoi dung chon thuat toan, keysize
        
    }//GEN-LAST:event_EncryptWithPublicKeyActionPerformed

    private void ExportPrivate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportPrivate1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ExportPrivate1ActionPerformed

    private void CreateKeyPairButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateKeyPairButton1ActionPerformed
        // TODO add your handling code here:
        PublicKeyArea.setText("");
        PrivateKeyArea.setText("");
        int keySize = Integer.parseInt(KeySizeComboBox1.getSelectedItem().toString());

        KeyPair keyPair = DCrypto.createRSAKeyPair(keySize);
        mainPublicKey = keyPair.getPublic();
        mainPrivateKey = keyPair.getPrivate();

        PublicKeyArea.append("=========Public key==========\n" + DCrypto.keyToString(mainPublicKey) );
        PublicKeyArea.append("\n========End public key=======");
        PrivateKeyArea.append("=========Private key=========\n" + DCrypto.keyToString(mainPrivateKey) );
        PrivateKeyArea.append("\n========End private key======");
    }//GEN-LAST:event_CreateKeyPairButton1ActionPerformed

    private void KeySizeComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KeySizeComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KeySizeComboBox1ActionPerformed

    private void NameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameFieldActionPerformed

    private void LoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginButtonActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_LoginButtonActionPerformed

    private void CreateAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateAccountButtonActionPerformed
        // TODO add your handling code here:
        //Users.GUI.CreateAccount_GUI createAccountWindow = new Users.GUI.CreateAccount_GUI();
        //createAccountWindow.
    }//GEN-LAST:event_CreateAccountButtonActionPerformed

    private void BrowseOutputFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrowseOutputFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BrowseOutputFileActionPerformed

    private void BrowseInputFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrowseInputFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BrowseInputFileActionPerformed

    private void InputFileField_SymActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputFileField_SymActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputFileField_SymActionPerformed

    private void OutputFileField_SymActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OutputFileField_SymActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OutputFileField_SymActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void KeySizeBox_Sym1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KeySizeBox_Sym1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KeySizeBox_Sym1ActionPerformed

    private void ExportPublicKey1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportPublicKey1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ExportPublicKey1ActionPerformed

    private void OutputFileField_Sym1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OutputFileField_Sym1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OutputFileField_Sym1ActionPerformed

    private void InputFileField_Sym1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputFileField_Sym1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputFileField_Sym1ActionPerformed

    private void BrowseInputFile1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrowseInputFile1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BrowseInputFile1ActionPerformed

    private void BrowseOutputFile1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrowseOutputFile1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BrowseOutputFile1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public void GetData() throws SAXException, IOException, ParserConfigurationException
    {
        Vector header = new Vector();
        header.addElement("Email"); 
        header.addElement("Name"); 
        header.addElement("Date Of Birth"); 
        header.addElement("Phone"); 
        header.addElement("Address");
        DefaultTableModel model = new DefaultTableModel(header, 0); 
        UserTable.setModel(model); 


        File file = new File("Database.xml"); 
        //Create instance of DocumentBuilderFactory 
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance(); 
        //Get the DocumentBuilder 
        DocumentBuilder docBuilder = factory.newDocumentBuilder(); 
        //Using existing XML Document 
        Document doc = docBuilder.parse(file); 

        Element rootNode = doc.getDocumentElement(); 

        NodeList list = rootNode.getElementsByTagName("User"); 

        for (int i = 0; i < list.getLength(); i++) 
        { 

            Vector row = new Vector(); // Chỉ thêm dòng này. 

            Element sv = (Element) list.item(i); 

            Element id = (Element) sv.getElementsByTagName("Email").item(0); 
            row.addElement(id.getTextContent()); 

            Element name = (Element) sv.getElementsByTagName("Name").item(0); 
            row.addElement(name.getTextContent()); 

            Element dateofbirth = (Element) sv.getElementsByTagName("DateOfBirth").item(0); 
            row.addElement(dateofbirth.getTextContent()); 

            Element phone = (Element) sv.getElementsByTagName("Phone").item(0); 
            row.addElement(phone.getTextContent()); 
            
            Element add = (Element) sv.getElementsByTagName("Address").item(0); 
            row.addElement(add.getTextContent()); 

            model.addRow(row); 

        } 
    }
    
    public void Refresh() throws SAXException, IOException, ParserConfigurationException
    {
       
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserManager_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserManager_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserManager_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserManager_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        try 
        {
            //Java look and feel
            UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
        } 
        catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(UserManager_GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() 
        {
            public void run() {
                try 
                {
                    new UserManager_GUI().setVisible(true);
                } 
                catch (IOException | ParserConfigurationException | SAXException ex) 
                {
                    Logger.getLogger(UserManager_GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu About;
    private javax.swing.JPanel AccountInfo;
    private javax.swing.JPanel AccountPane;
    private javax.swing.JButton AddUserButton;
    private javax.swing.JLabel AddrLabel;
    private javax.swing.JTextField AddrTextField;
    private javax.swing.JTextField AlgorithmField;
    private javax.swing.JTextField AlgorithmField1;
    private javax.swing.JPanel AsymmetricTab;
    private javax.swing.JButton BrowseInputFile;
    private javax.swing.JButton BrowseInputFile1;
    private javax.swing.JButton BrowseOutputFile;
    private javax.swing.JButton BrowseOutputFile1;
    private javax.swing.JTextArea CommandLine;
    private javax.swing.JTextArea CommandLine_Sym;
    private javax.swing.JTextArea CommandLine_Sym1;
    private javax.swing.JPanel ContactsPane;
    private javax.swing.JButton CreateAccountButton;
    private javax.swing.JButton CreateKeyPairButton;
    private javax.swing.JButton CreateKeyPairButton1;
    private javax.swing.JButton DecryptButton;
    private javax.swing.JPanel DecryptTab;
    private javax.swing.JMenuItem DeleteContact;
    private javax.swing.JButton DeleteUserButton;
    private javax.swing.JLabel DoBLabel;
    private javax.swing.JFormattedTextField DoBTextField;
    private javax.swing.JMenuItem EditContact;
    private javax.swing.JButton EditUserButton;
    private javax.swing.JLabel EmailLabel;
    private javax.swing.JTextField EmailTextField;
    private javax.swing.JButton EncryptButton;
    private javax.swing.JPanel EncryptTab;
    private javax.swing.JMenuItem EncryptWithPublicKey;
    private javax.swing.JMenuItem ExportContactInfo;
    private javax.swing.JButton ExportInfoButton;
    private javax.swing.JButton ExportPrivate;
    private javax.swing.JButton ExportPrivate1;
    private javax.swing.JButton ExportPublic;
    private javax.swing.JButton ExportPublicKey;
    private javax.swing.JButton ExportPublicKey1;
    private javax.swing.JButton FileButton_1;
    private javax.swing.JButton FileButton_2;
    private javax.swing.JPanel FileInfoPane;
    private javax.swing.JPanel FileInfoPane1;
    private javax.swing.JButton GetPublicKeyButton;
    private javax.swing.JMenu Help;
    private javax.swing.JLabel HoTenLabel;
    private javax.swing.JButton ImportPrivateKey;
    private javax.swing.JButton ImportPublicKey;
    private javax.swing.JTextField InputFileField;
    private javax.swing.JTextField InputFileField_Sym;
    private javax.swing.JTextField InputFileField_Sym1;
    private javax.swing.JPanel KeyInfoPane;
    private javax.swing.JPanel KeyInfoPane1;
    private javax.swing.JTextField KeyOwnerField;
    private javax.swing.JTextField KeyOwnerField1;
    private javax.swing.JPanel KeyPairInfo;
    private javax.swing.JTextField KeySizeBox;
    private javax.swing.JTextField KeySizeBox_Sym;
    private javax.swing.JTextField KeySizeBox_Sym1;
    private javax.swing.JComboBox<String> KeySizeComboBox1;
    private javax.swing.JTextField KeySizeField;
    private javax.swing.JTextField KeySizeField1;
    private javax.swing.JButton LoginButton;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JTextField NameField;
    private javax.swing.JTextField OutputFileField;
    private javax.swing.JTextField OutputFileField_Sym;
    private javax.swing.JTextField OutputFileField_Sym1;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JLabel PhoneLabel;
    private javax.swing.JTextField PhoneTextField;
    private javax.swing.JTextArea PrivateKeyArea;
    private javax.swing.JScrollPane PrivateKeyScrollPane;
    private javax.swing.JTextArea PublicKeyArea;
    private javax.swing.JScrollPane PublicKeyScrollPane;
    private javax.swing.JButton RefreshButton;
    private javax.swing.JScrollPane ScrollUserPane;
    private javax.swing.JMenuItem ShowContactInfo;
    private javax.swing.JButton SignButton;
    private javax.swing.JTabbedPane TabbedPane;
    private javax.swing.JButton UpdateAccButton;
    private javax.swing.JPanel UserOperationPane;
    private javax.swing.JTable UserTable;
    private javax.swing.JButton VerifyButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JComboBox<String> jComboBox7;
    private javax.swing.JComboBox<String> jComboBox8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPopupMenu popUpMenu;
    // End of variables declaration//GEN-END:variables
}
